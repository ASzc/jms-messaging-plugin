CI Plugin Test Scenarios

Given a Jenkins instance with the CI plugin installed
When you enter broker connection info
And you click Test Connection
Then a successful connection message will be displayed

Given a Jenkins instance with the CI plugin installed and configured
And job A configured with a CI Notifier step with type CodeQualityChecksDone
And job B configured with a CI Trigger for type CodeQualityChecksDone
When Job A is triggered
Then Build B1 is executed

Given a Jenkins instance with the CI plugin installed and configured
And job A configured with a CI Notifier step with type CodeQualityChecksDone
And job B configured with a CI Subscriber step for type CodeQualityChecksDone
When Job B is triggered
And Job A is triggered 10 seconds later
Then Build B1 will wait until Build A1 has executed the CI Notifier step
And both Builds A1 and B1 succeed

Given a Jenkins instance with the CI plugin installed and configured
And job A is configured with a CI Create Task Repo step with a Brew task ID of ABC
When Job A is triggered
Then Build A1 will succeed
And the Build will contain an environment variable containing the repo URL

Given a Jenkins instance with the CI plugin installed and configured
And job A is configured with a CI Generate Brew Repo step with a Brew tag of ARCHES containing arches
And job A is configured with a CI Generate Brew Repo step with a Brew tag of NO_ARCHES with no arches
When Job A is triggered
Then Build A1 will succeed
And the Build will contain an environment variables containing the repo URLs

Given a Jenkins instance with the CI plugin installed and configured
And job A is configured with a CI Regen Static Repo step with a Brew tag of ABC
When Job A is triggered
Then Build A1 will succeed
And the Build will contain an environment variable containing the repo URL

Given a Jenkins instance with the CI plugin installed and configured
And job A is configured with a CI Tag Brew Build step with a Brew tag of ABC
When Job A is triggered
Then Build A1 will succeed
And the Build will contain an environment variable containing the repo URL

Given a Jenkins instance with the CI plugin installed and configured
And job A is configured with a CI Polarion Exporter post-build step 
When Job A is triggered
Then XUnit xml files will be parsed
And the test results will be uploaded to Polarion
And Build A1 will succeed
